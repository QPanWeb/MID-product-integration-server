@startuml

participant StocksInbound : InboundEndpoint(protocol("http"),port("8290"),context("/stocks"))

participant StocksPipeline : Pipeline("Stocks_Flow")

participant NYSEOutbound : OutboundEndpoint(protocol("http"),host("http://localhost:8080/stockquote/all"))

participant NASDAQOutbound : OutboundEndpoint(protocol("http"),host("http://localhost:8081/stockquote/all"))

var String logStatement = "I am a global variable with name 'logStatement'"

StocksInbound -> StocksPipeline : "client request"

StocksPipeline::log("$logStatement")

StocksPipeline::log("before filter statement")

if with condition(source("$header.exchange"),pattern("nyse"))
    var String logStatement = "I am a local variable with name 'logStatement' inside filter mediator"
    StocksPipeline::log("Filter condition is true")
    StocksPipeline::log("$logStatement")
    StocksPipeline -> NYSEOutbound : "Request to New York Stock Exchange"
    NYSEOutbound -> StocksPipeline : "StockQuotes from New York Stock Exchange"

else
    StocksPipeline::log("Filter condition is false")
    StocksPipeline -> NASDAQOutbound : "Request to NASDAQ"
    NASDAQOutbound -> StocksPipeline : "StockQuotes from NASDAQ"
end

StocksPipeline::log("After filter statement")
StocksPipeline::log("$logStatement")


StocksPipeline -> StocksInbound : "Final Response"


@enduml